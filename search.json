[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R_HCDC",
    "section": "",
    "text": "Giới thiệu",
    "crumbs": [
      "Giới thiệu"
    ]
  },
  {
    "objectID": "index.html#mục-tiêu-chung",
    "href": "index.html#mục-tiêu-chung",
    "title": "R_HCDC",
    "section": "Mục tiêu chung",
    "text": "Mục tiêu chung\nĐào tạo, tập huấn kiến thức chuyên môn về Quản lý dữ liệu bệnh truyền nhiễm, giám sát dựa vào sự kiện (EBS), phân tích và trực quan dữ liệu, cách thức sử dụng phần mềm phân tích và trực quan hóa dữ liệu, phương pháp cảnh báo và dự báo dịch nhằm hỗ trợ Khoa thực hiện hiệu quả chức năng, nhiệm vụ được giao.",
    "crumbs": [
      "Giới thiệu"
    ]
  },
  {
    "objectID": "index.html#chương-trình",
    "href": "index.html#chương-trình",
    "title": "R_HCDC",
    "section": "Chương trình",
    "text": "Chương trình\n\n\n\n\n\n\n\n\nNgày\nBài giảng\nNội dung\n\n\n\n\nNgày 1\nGiới thiệu ngôn ngữ R\nSơ lược về ngôn ngữ R và RStudio\nỨng dụng phổ biến của R\nGit và GitHub trong R\n\n\nNgày 2\nQuản lý dữ liệu trong R\nCác loại dữ liệu trong R\nQuản lý dữ liệu trong R\nNhập và xuất dữ liệu\n\n\nNgày 3\nLàm sạch dữ liệu và phong cách sử dụng R\nLàm sạch dữ liệu\nBiến đổi dữ liệu và Tidy data\nTạo function trong R\n\n\nNgày 4\nPhân tích dữ liệu với R\nTạo project trong R và Rmarkdown\nBảng thống kê với R\nMột số kiểm định thống kê cơ bản\n\n\nNgày 5\nTrực quan hóa dữ liệu với R\nLàm quen với ggplot2\nCác loại biểu đồ cơ bản\nMột số biểu đồ nâng cao và bản đồ\n\n\nNgày 6\nLượng giá tổng kết chuyên đề\nBài thực hành tổng hợp về phân tích dữ liệu bằng Rmarkdown",
    "crumbs": [
      "Giới thiệu"
    ]
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "1  Giới thiệu ngôn ngữ R",
    "section": "",
    "text": "1.1 R",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Giới thiệu ngôn ngữ R</span>"
    ]
  },
  {
    "objectID": "introduction.html#r",
    "href": "introduction.html#r",
    "title": "1  Giới thiệu ngôn ngữ R",
    "section": "",
    "text": "1.1.1 R là gì\n\nR là một ngôn ngữ lập trình được phát triển bởi GS. Robert Gentleman và GS. Ross Ihaka tại Đại học Auckland1. Tên gọi R được đặt theo chữ cái đầu của tên 2 tác giả (Robert và Ross).\nĐể tính toán thống kê và trực quan hóa dữ liệu.\nBao gồm phần cơ bản (tích hợp sẵn khi cài đặt R) và phần mở rộng thông qua các gói (packages)\n\n\n\n1.1.2 Ngôn ngữ lập trình\n\nNgôn ngữ lập trình là một tập hợp các hướng dẫn để yêu cầu máy tính thực hiện một số tác vụ nhất định.\nNgười dùng giao tiếp, đối thoại với máy tính bằng cách nhập những câu văn (code) giống như chat với máy tính, để máy hiểu và làm đúng những gì con người muốn\n\n\n\n1.1.3 Nên sử dụng R vì\n\nMiễn phí, liên tục cập nhật\nRất tốt trong xử lý thống kê và vẽ đồ họa\nLưu trữ câu lệnh và thực hiện lại dễ dàng\nNên sử dụng RStudio thay vì R cơ bản\nHoàn toàn có thể tự học từ nguồn internet",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Giới thiệu ngôn ngữ R</span>"
    ]
  },
  {
    "objectID": "introduction.html#r-và-rstudio",
    "href": "introduction.html#r-và-rstudio",
    "title": "1  Giới thiệu ngôn ngữ R",
    "section": "1.2 R và RStudio",
    "text": "1.2 R và RStudio\n\n1.2.1 Phân biệt R và RStudio\n\n\n\n\n\n\n\nR\nRStudio\n\n\n\n\n\nlà ngôn ngữ lập trình\nSau khi cài R, chúng ta mở lên sẽ thấy giao diện giống như một khung chat trống. Khung chat này là nơi chúng ta viết code để giao tiếp với máy tính.\n\n\nlà một môi trường phát triển tích hợp (integrated development environment hay IDE) hay nói đơn giản là một phần mềm để viết code R hiệu quả hơn.\n\n\n\n\n\n\n1.2.2 Cài đặt R\nTrang web chính thức của R: https://www.r-project.org\n\n\n\n\n\n\n\n1.2.3 Cài đặt RStudio\nTrang web chính thức của RStudio: https://posit.co/download/rstudio-desktop/\nCần cài đặt R trước khi cài RStudio",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Giới thiệu ngôn ngữ R</span>"
    ]
  },
  {
    "objectID": "introduction.html#ứng-dụng-phổ-biến-của-r",
    "href": "introduction.html#ứng-dụng-phổ-biến-của-r",
    "title": "1  Giới thiệu ngôn ngữ R",
    "section": "1.3 Ứng dụng phổ biến của R",
    "text": "1.3 Ứng dụng phổ biến của R\n\n1.3.1 Phân tích và trực quan hóa dữ liệu\n\nR cung cấp nhiều thư viện mạnh mẽ như ggplot2, dplyr, tidyverse để xử lý và trực quan hóa dữ liệu.\nThường được sử dụng trong nghiên cứu khoa học, kinh tế, y tế và kinh doanh để phân tích dữ liệu và tạo báo cáo.\n\n\n\n1.3.2 Thống kê và kiểm định giả thuyết\n\nHỗ trợ các phương pháp thống kê như hồi quy tuyến tính, kiểm định t-test, ANOVA, và các mô hình thống kê khác.\nPhù hợp cho nghiên cứu học thuật và phân tích dữ liệu chuyên sâu.\n\n\n\n1.3.3 Học máy (Machine Learning)\n\nCó các thư viện như caret, randomForest, e1071, xgboost giúp xây dựng mô hình dự đoán.\nR thường được dùng để phát triển và đánh giá các mô hình học máy.\n\n\n\n1.3.4 Xử lý dữ liệu lớn (Big Data Analytics)\n\nR có thể tích hợp với Apache Spark thông qua sparklyr, giúp xử lý dữ liệu lớn.\nKết hợp SQL, NoSQL để phân tích dữ liệu quy mô lớn.\n\n\n\n1.3.5 Khoa học dữ liệu và báo cáo tự động\n\nR hỗ trợ tạo báo cáo động với R Markdown, giúp tự động hóa báo cáo dữ liệu.\nR Shiny cho phép xây dựng ứng dụng web tương tác để trình bày dữ liệu.\n\n\n\n1.3.6 Y học và sinh học\n\nHỗ trợ nghiên cứu dịch tễ học, mô hình hóa bệnh tật",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Giới thiệu ngôn ngữ R</span>"
    ]
  },
  {
    "objectID": "introduction.html#git-và-github-trong-r",
    "href": "introduction.html#git-và-github-trong-r",
    "title": "1  Giới thiệu ngôn ngữ R",
    "section": "1.4 Git và GitHub trong R",
    "text": "1.4 Git và GitHub trong R\n\n1.4.1 Git \nGit là một phần mềm mã nguồn mở, quản lý phiên bản (Version Control System - VCS), mục đích của nó là theo dõi các thay đổi của tệp trong một kho lưu trữ và cung cấp khả năng quay lại phiên bản trước đó (bao gồm các thay đổi trong mã nguồn mở cho các mô hình tính toán, thuật toán theo thời gian).\nGit là một phần mềm hoạt động cục bộ. Bạn không cần GitHub để Git có thể hoạt động. Bạn có thể sử dụng Git độc lập.\n\n\n1.4.2 GitHub \nGitHub là một dịch vụ dựa trên đám mây để lưu trữ kho lưu trữ Git, mục đích chính của nó là lưu trữ và/hoặc chia sẻ dự án Git của bạn với các cộng tác viên trên đám mây.\nGitHub đóng vai trò như một máy chủ từ xa cho Git, cho phép bạn chia sẻ dự án và cộng tác với người khác từ xa.\nGiao diện dưới dạng Web-based\nMiễn phí và công khai\n\n\n\n1.4.3 Repository\nKho lưu trữ (Repository): Chứa một tập hợp các tệp và thư mục, ghi lại lịch sử thay đổi, theo dõi trạng thái và các phiên bản của chúng. Có hai loại:\n\nKho lưu trữ từ xa (Remote repository): Lưu trữ trên máy chủ từ xa, được chia sẻ giữa nhiều thành viên trong nhóm.\nKho lưu trữ cục bộ (Local repository): Lưu trữ trên máy tính cá nhân của người dùng.\n\n\n\n1.4.4 GitHub Desktop \n\nGitHub Desktop là một phần mềm giúp bạn sử dụng Git dễ dàng hơn. Nó là một phần mềm được xây dựng bởi GitHub, một lần nữa, tách biệt với Git\nƯu điểm:\n\nĐơn giản hóa mọi thứ và chỉ cung cấp các chức năng thường được sử dụng của Git\nGiảm khả năng bạn sẽ mắc lỗi khi sử dụng Git\nTích hợp trực tiếp với GitHub, giúp xác thực dễ dàng hơn\n\n\n\n\n1.4.5 Sản phẩm từ GitHub\nThiết kế Website giới thiệu Khoa, thông tin khóa học\n\n\nTrình bày kết quả phân tích, cảnh báo, dự báo dịch\n\n\nThiết kế Dashboard",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Giới thiệu ngôn ngữ R</span>"
    ]
  }
]